---
interface Props {
  img: string;
  img_alt: string;
  video?: string;
}

const { img, img_alt, video } = Astro.props;
---

<img
  class:list={[
    "hidden aspect-square h-24 animate-shimmer select-none rounded-md bg-gradient-to-br from-sage-600 via-sage-400 to-sage-600 bg-400% md:block hover-hover:lg:col-span-full hover-hover:lg:row-span-full hover-hover:lg:aspect-video hover-hover:lg:h-52 hover-hover:lg:w-full",
    ,
    {
      "hover-hover:lg:visible hover-hover:lg:group-hover:invisible":
        video !== undefined,
    },
  ]}
  src={img}
  alt={img_alt || ""}
  loading="lazy"
  decoding="async"
/>

{
  video && (
    <video
      class="lazy hidden rounded-md object-cover hover-hover:lg:invisible hover-hover:lg:col-span-full hover-hover:lg:row-span-full hover-hover:lg:block hover-hover:lg:aspect-video hover-hover:lg:h-52 hover-hover:lg:w-full hover-hover:lg:group-hover:visible"
      preload="none"
      autoplay
      muted
      loop
      playsinline
    >
      <source data-src={`${video}.webm`} type="video/webm" />
      <source data-src={`${video}.mp4`} type="video/mp4" />
    </video>
  )
}
